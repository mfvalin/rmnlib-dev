interface

  function fstouv(iun, name)  result(status)
    implicit none
    integer, intent(IN) :: iun
    character(len=*), intent(IN) :: name
    integer :: status
  end function fstouv

  subroutine fstfrm(iun)
    implicit none
    integer, intent(IN) :: iun
  end subroutine fstfrm

  function fstinf(iun,ni,nj,nk,datev,etiket,ip1,ip2,ip3,typvar,nomvar) result(key)
    implicit none
    integer, intent(IN) :: iun
    integer, intent(OUT) :: ni, nj, nk
    character(len=*), intent(IN) :: typvar,nomvar,etiket
    integer, intent(IN) :: datev,ip1,ip2,ip3
    integer :: key
  end

  function fstsui(iun, ni, nj, nk) result(key)
    implicit none
    integer, intent(IN) :: iun
    integer, intent(OUT) :: ni, nj, nk
    integer :: key
  end function fstsui

  subroutine fstprm(key,dateo,deet,npas,ni,nj,nk,nbits,datyp,ip1,ip2,ip3, &
              typvar,nomvar,etiket,grtyp,ig1,ig2,ig3,ig4, &
              swa,lng,dltf,ubc,extra1,extra2,extra3)
    implicit none
    integer, intent(IN) :: key
    integer, intent(OUT) :: dateo,deet,npas,ni,nj,nk,nbits,datyp,ip1,ip2,ip3
    character(len=*), intent(OUT) :: typvar,nomvar,etiket,grtyp
    integer, intent(OUT) :: ig1,ig2,ig3,ig4,swa,lng,dltf,ubc,extra1,extra2,extra3
  end subroutine fstprm

  function fstlir(iun,f,ni,nj,nk,datev,etiket,ip1,ip2,ip3,typvar,nomvar) result(key)
    implicit none
#define VarName     f
#include <blind_argument.hf>
    integer, intent(IN) :: iun
    integer, intent(OUT) :: ni, nj, nk
    character(len=*), intent(IN) :: typvar,nomvar,etiket
    integer, intent(IN) :: datev,ip1,ip2,ip3
    integer :: key
  end

  function fstluk(f, key, ni, nj, nk) result(status)
    implicit none
#define VarName     f
#include <blind_argument.hf>
    integer, intent(IN) :: key
    integer, intent(OUT) :: ni, nj, nk
    integer :: status
  end function fstluk

  subroutine fstecr(f,work,nbits,iun,dateo,deet,npas,ni,nj,nk,ip1,ip2,ip3,typvar,nomvar,etiket,grtyp,ig1,ig2,ig3,ig4,datyp,rewrite)
    implicit none
#define VarName     f,work
#include <blind_argument.hf>
    integer, intent(IN) :: nbits,iun,dateo,deet,npas,ni,nj,nk,ip1,ip2,ip3
    character(len=*), intent(IN) :: typvar,nomvar,etiket,grtyp
    integer, intent(IN) :: ig1,ig2,ig3,ig4,datyp
    logical, intent(IN) :: rewrite
  end subroutine fstecr

end interface
